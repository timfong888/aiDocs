## Augment Guidelines
### Core
Use Task Manager, Sequential Thinking, Context7, Playwright, vertex-ai-mcp-server, desktop-commander for file/terminal tasks
Write modular code; use 'services' for client-API interactions
### RESPONSE
- No Hallucination: If unknown, say "I don't know"
- Specific: No vague answers to specific queries
- "Why" on Mistakes: Analyze actual code/actions, identify errors, give examples
- Code First: Check code before making claims
- Uncertainty: State it, verify with tools, explain verification
- No Assumptions: About project, user preferences, configs
- Analyze Mistakes: Provide specific feedback on errors
- Verify Assumptions: Stop and verify when assuming
### CODEBASE
Pre-Change: Use codebase-retrieval before changes
Context: Understand dependencies before modifying
For Each Change: Retrieve files, check imports/patterns
File Edits: View entire file, ID affected elements
Verify Imports: Ensure correctness before submitting
New Functions: Check for existing similar ones first
No Blind Copy: Understand any copied code
SERVERS
No New Servers: Never use "npm run dev" without killing running servers first
Check Processes: Use list-processes before restarts
Restart Existing: Use exact terminal ID
Restart Steps: list-processes→kill-process→npm run dev
No New Ports: Use existing ports only
Firebase
Services: Cloud Firestore, Database, Auth, Storage
SDK Init: src/lib/firebase.ts for client-side
Live Project: Per .env.local & firebase.ts
NO EMULATOR: Production only
Auth
Firebase Auth Only: No other libraries
Email/Pass: Use Firebase methods
Other Methods: Verify setup first
Updates
Code-Based: Modify JSON files
Deploy: Use firebase deploy
